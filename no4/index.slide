Intro to pi calculus
旧題（π計算手習い）

keizo
@keizo042
github/keizo042


* About me

- keizo
- 不良大学生
- haskeller/gopher
- i like mruby
- rust...?

* おはなし
- プロセス代数
- π計算
- for programming
- grammer
- かいてみた
- closing

* Process Algebra

並行システムを形式的に記述する手法
プロセスとデータのやりとりが存在
ビジネスプロセス(BPML)や並行処理(channel)への応用がなされている

* pi calculus

- プロセス代数の計算モデルの一つ
- CSP由来の計算モデル
- lambda よりあとのギリシャ文字から語呂のいいモノを選んだ
- 最近話題になってるプログラミング言語の背景の一つになっている


* プログラミングにおいて
安全なスレッド間でのデータのやりとり

golang say
.code golangsay.txt

* 来歴

- Petri net
- Communicating Sequential System (CCS) 
- Communicating Sequential Process (CSP)
- Algebra of Sequential Process (ASP) ※ここからAlgebra of Procesというワード

* programming language

*Erlang*

actor model

*Golang*
gorutine/channel

*rust*
channel

*c++*
MPICH

*Java
JCSP

.net,ocaml..etcetc

* grammer

.code grammer.txt

pi calculusで存在するのは
Process(プロセス)とport(経路)
また、portにportを送ることも出来る(CCSではできない)

* なにができる？
- 自然数の定義
- 真偽値の定義
- *λ計算へのnecode*


* sample code

golangで書いた 自然数の定義もどき
.code natural.go

* closing

- 並行並列処理を求められる処理がどんどん増えている
- mutexを用いたblockingも悪いものではない
- 武器は多いほうが良い
- channelでのblockingも覚えると良い
- golagnって最高だよね


